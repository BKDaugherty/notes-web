{"version":3,"sources":["api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["NOTES_API","TAGS","get_tags","a","archive_note","note_id","fetch","String","method","create_note","create_note_request","tags","map","convert_tags_to_rust","headers","body","JSON","stringify","update_note","update_note_request","check_tag_equality","tag1","tag2","tag","convert_tags_from_rust","console","error","notes_api","get_notes","owner","then","response","json","data","notes","Object","values","value","push","sort","b","last_update_time","lists","styles","theme","fullHeight","mixins","toolbar","text","padding","spacing","addButton","position","zIndex","bottom","right","margin","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","appBar","top","grow","flexGrow","App","props","changeTab","event","setState","currentTab","state","bind","createMuiTheme","primary","light","main","dark","contrastText","secondary","default","Fragment","CssBaseline","ThemeProvider","this","StyledNotesPanel","StyledListsPanel","StyledBottomAppBar","React","Component","NotesPanel","handleOpen","active_note","open","active_uuid","uuid","title","description","handleCreate","origin","handleClose","handleSearchChange","evt","newValue","search","handleNoteTagEdit","handleNoteEdit","handleSave","handleArchive","loadNotes","catch","log","target","name","classes","Paper","square","className","handleChange","Autocomplete","multiple","options","getOptionLabel","option","onChange","renderInput","params","TextField","fullWidth","variant","placeholder","List","filter","note_data","delete_time","length","search_tag","search_tag_found","note_tag","index","onClick","Fab","color","aria-label","IconButton","ListsPanel","Typography","gutterBottom","ListEntry","BottomAppBar","AppBar","Tabs","Tab","root","icon","NoteDialog","Dialog","onClose","scroll","aria-labelledby","aria-describedby","DialogTitle","label","type","DialogContent","dividers","multiline","rows","DialogActions","Button","TagField","getOptionSelected","NoteEntry","last_update_human","Date","Number","toLocaleString","ListItem","divider","button","ListItemText","list_data","id","withStyles","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e0c2bd66.chunk.js","sourcesContent":["// Run against prod API\nconst NOTES_API = \"https://typed-thoughts.herokuapp.com/\"\n// Local Development\n// const NOTES_API = 'http://localhost:9001/'\n\n// TODO Algebraic tags\n// TODO --> Get these from Rust\nconst TAGS = [\n    {\"title\": \"Article\"},\n    {\"title\": \"Book\"},\n    {\"title\": \"Movie\"},\n    {\"title\": \"Career\"},\n    {\"title\": \"Entertainment\"},\n    {\"title\": \"Productivity\"},\n    {\"title\": \"ArtificialIntelligence\"},\n    {\"title\": \"EffectiveAltruism\"},\n    {\"title\": \"SocialJustice\"},\n];\n\nconst get_tags = async () => {\n    return TAGS;\n}\n\nconst get_notes = (owner) => {\n    return fetch(NOTES_API + \"notes/brendon\").then(response => {\n\treturn response.json().then(data => {\n\t    let notes = [];\n\t    for (const value of Object.values(data.notes)) {\n\t\tvalue.tags = value.tags.map(convert_tags_from_rust);\n\t\tnotes.push(value);\n\t    }\n\t    notes.sort((a,b) => {\n\t\tif (a.last_update_time <  b.last_update_time) {\n\t\t    return 1;\n\t\t}\n\t\treturn -1;\n\t    });\n\t    return notes\n\t})\n    });\n}\n\nconst archive_note = async(note_id) => {\n    return fetch(NOTES_API + \"notes/archive/\" + String(note_id), {\n\tmethod: \"PUT\",\n    });\n}\n\nconst create_note = async (create_note_request) => {\n    create_note_request.tags = create_note_request.tags.map(convert_tags_to_rust);\n    return fetch(NOTES_API + \"notes\", {\n\tmethod: \"POST\",\n\theaders: {\n\t    'Content-Type': 'application/json'\n\t},\n\tbody: JSON.stringify(create_note_request)\n    });\n}\n\nconst update_note = async (update_note_request) => {\n    update_note_request.tags = update_note_request.tags.map(convert_tags_to_rust);\n    return fetch(NOTES_API + \"note/\" + update_note_request.note_id, {\n\tmethod: \"PUT\",\n\theaders: {\n\t    'Content-Type': 'application/json'\n\t},\n\tbody: JSON.stringify(update_note_request)\n    });\n}\n\nconst check_tag_equality = (tag1, tag2) => {\n    return tag1['title'] === tag2['title'];\n}\n\nconst convert_tags_to_rust = (tag) => {\n    return tag[\"title\"];\n}\n\nconst convert_tags_from_rust = (tag) => {\n    if (typeof(tag) == \"string\") {\n\treturn {\"title\": tag};\n    } else {\n\tconsole.error(\"Unknown tag variant:\", tag);\n\treturn tag;\n    }\n}\n\nconst notes_api = {\n    get_tags: get_tags,\n    create_note: create_note,\n    update_note: update_note,\n    get_notes: get_notes,\n    archive_note: archive_note,\n}\n\nexport {\n    TAGS, check_tag_equality, notes_api\n};\n\n\n\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Fab from \"@material-ui/core/Fab\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListIcon from '@material-ui/icons/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nimport {notes_api, TAGS, check_tag_equality} from \"./api\";\n\nconst lists = [];\n\nconst styles = theme => ({\n  fullHeight: {\n    ...theme.mixins.toolbar,\n  },\n    text: {\n    padding: theme.spacing(2, 2, 0),\n    },\n  addButton: {\n    position: 'absolute',\n    zIndex: 1,\n    bottom: '10%',\n    right: \"5%\",\n    margin: '0 auto',\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nclass App extends React.Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state = {currentTab: 'notes'};\n\tthis.changeTab = this.changeTab.bind(this);\n    }\n    changeTab = (event, value) => {\n\tthis.setState({ currentTab: value});\n    };\n\n    render () {\n\tconst theme = createMuiTheme({\n\t     palette: {\n\t\t primary: {\n\t\t     light: '#757ce8',\n\t\t     main: '#000000',\n\t\t     dark: '#002884',\n\t\t     contrastText: '#fff',\n\t\t },\n\t\t secondary: {\n\t\t     light: '#ff7961',\n\t\t     main: '#f44336',\n\t\t     dark: '#ba000d',\n\t\t     contrastText: '#000',\n\t\t },\n\t\t background: {\n\t\t     paper: '#efefef',\n\t\t     default: \"#fff\",\n\t\t }\n\t     },\n\t});\n\treturn (<React.Fragment>\n\t    <CssBaseline />\n\t    <ThemeProvider theme={theme}>\n\t    {this.state.currentTab === 'notes' &&\n\t     <StyledNotesPanel />\n\t    }\n\t    {this.state.currentTab === 'lists' &&\n\t     <StyledListsPanel />\n\t    }\n\t    <StyledBottomAppBar changeTab={this.changeTab} currentTab={this.state.currentTab}/>\n\t    </ThemeProvider>\n\t</React.Fragment>);\n    }\n}\n\n\nclass NotesPanel extends React.Component {\n    // Note we are looking at, and whether we are looking at it\n    constructor(props) {\n\tsuper(props);\n\t// Chose to unpack note to simplify set_state\n\tthis.state = {\n\t    open: false,\n\t    search: [],\n\t    active_uuid: \"\",\n\t    title: \"\",\n\t    description:\"\",\n\t    owner: \"brendon\",\n\t    origin: \"\",\n\t    tags: [],\n\t    notes: []\n\t    \n\t}\n\tthis.handleNoteTagEdit = this.handleNoteTagEdit.bind(this);\n\tthis.handleNoteEdit = this.handleNoteEdit.bind(this);\n\tthis.handleOpen = this.handleOpen.bind(this);\n\tthis.handleSave = this.handleSave.bind(this);\n\tthis.handleArchive = this.handleArchive.bind(this);\n    }\n\n    componentDidMount() {\n\tthis.loadNotes();\n    }\n\n    loadNotes() {\n\tnotes_api.get_notes(\"brendon\").then(notes => {\n\t    this.setState({\n\t\tnotes: notes\n\t    });\n\t}).catch(console.log)\n    }\n\n    handleOpen = (active_note) => {\n\tthis.setState(\n\t    {\n\t\topen: true,\n\t\tactive_uuid: active_note.uuid,\n\t\ttitle: active_note.title,\n\t\tdescription: active_note.description,\n\t\ttags: active_note.tags,\n\n\t});\n    }\n\n    handleArchive() {\n\tconst note_id = this.state.active_uuid;\n\tnotes_api.archive_note(note_id).then(response => {\n\t    this.loadNotes();\n\t}).catch(console.error);\n    }\n\n    handleCreate = () => {\n\tthis.setState(\n\t    {\n\t\topen: true,\n\t\tactive_uuid: null,\n\t\ttitle: \"\",\n\t\tdescription: \"\",\n\t\torigin: \"\",\n\t\ttags: []\n\t});\n    }\n\n    handleNoteEdit(evt) {\n\tthis.setState({\n\t    [evt.target.name]: evt.target.value\n\t});\n    }\n\n    handleNoteTagEdit(event, newValue) {\n\tthis.setState({\n\t    tags: newValue\n\t});\n    }\n\n    handleSave() {\n\t// If we are editing a note\n\tif(this.state.active_uuid) {\n\t    let update_note_request = {\n\t\tnote_id: this.state.active_uuid,\n\t\ttitle: this.state.title,\n\t\tdescription: this.state.description,\n\t\torigin: this.state.origin,\n\t\ttags: this.state.tags,\n\t    };\n\t    notes_api.update_note(update_note_request).then(response => {\n\t\t// Once we've successfully saved, log the response, and reload the notes on the page\n\t\tthis.loadNotes();\n\t    }).catch(console.error);\n\t    \n\t} else {\n\t    let create_note_request = {\n\t\ttitle: this.state.title,\n\t\tdescription: this.state.description,\n\t\towner:this.state.owner,\n\t\torigin: this.state.origin,\n\t\ttags: this.state.tags,\n\t    };\n\t    notes_api.create_note(create_note_request).then(response => {\n\t\tthis.loadNotes();\n\t\t// Force close after create\n\t\tthis.handleClose();\n\t    }).catch(console.error);\n\t}\n    }\n\n    handleClose = () => {\n\tthis.setState({open: false, active_note: null});\n    }\n\n    handleSearchChange = (evt, newValue) => {\n\tthis.setState({search: newValue});\n    }\n\n    render() {\n\tconst { classes } = this.props;\n\treturn (\n\t    <Paper square className={classes.paper}>\n\t    {this.state.open &&\n\t     <NoteDialog\n\t\thandleClose={this.handleClose}\n\t\thandleChange={this.handleNoteEdit}\n\t\thandleNoteTagEdit={this.handleNoteTagEdit}\n\t\thandleSave={this.handleSave}\n\t\thandleArchive={this.handleArchive}\n\t\topen={this.state.open}\n\t\ttitle={this.state.title}\n\t\tdescription={this.state.description}\n\t\torigin={this.state.origin}\n\t\ttags={this.state.tags}\n\t\t/>}\n\t    <Autocomplete\n\t    multiple\n\t    options={TAGS}\n\t    getOptionLabel={(option) => option.title}\n\t    value={this.state.search}\n\t    onChange={this.handleSearchChange}\n\t    renderInput={(params) =>\n\t\t<TextField\n\t\t{...params}\n\t\tfullWidth\n\t\tvariant=\"filled\"\n\t\tplaceholder=\"Search...\"\n\t\t/>}\n\t    />\n            <List className={classes.list}>\n            {\n\t\tthis.state.notes.filter((note_data) => {\n\t\t    // Don't show notes that have been 'archived'\n\t\t    if (note_data.delete_time == null) {\n\t\t\treturn true;\n\t\t    }\n\t\t    \n\t\t    // Filter notes based on search box\n\t\t    if (this.state.search.length > 0) {\n\t\t\t// TODO make this a set :(\n\t\t\t// Note tags must contain all search tags\n\t\t\tfor (const search_tag of this.state.search) {\n\t\t\t    let search_tag_found = false;\n\t\t\t    for(const note_tag of note_data.tags) {\n\t\t\t\tif(check_tag_equality(search_tag, note_tag)) {\n\t\t\t\t    search_tag_found = true;\n\t\t\t\t}\n\t\t\t    }\n\t\t\t    if (!search_tag_found) {\n\t\t\t\treturn false;\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t    return true;\n\t    }).map((note_data, index) => (\n\t\t// map notes into viewable entries\n\t\t<>\n\t\t<NoteEntry key={`note-entry-${index}`} note_data={note_data} onClick={() => {this.handleOpen(note_data)}} />\n\t\t</>)\n\t    )}\n            </List>\n\t    <Fab color=\"secondary\" aria-label=\"add\" className={classes.addButton}>\n\t    <IconButton color=\"inherit\" onClick={this.handleCreate}>\n            <AddIcon />\n\t    </IconButton>\n            </Fab>\n\t    </Paper>\n\t);\n    }\n}\n\nclass ListsPanel extends React.Component {\n    render() {\n\tconst { classes } = this.props;\n\treturn (\n\t    <Paper square className={classes.paper}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom>\n\t    Lists\n            </Typography>\n            <List className={classes.list}>\n            {lists.map(ListEntry)}\n            </List>\n\t    </Paper>\n\t);\n    }\n}\n\n\nclass BottomAppBar extends React.Component {\n    render () {\n\tconst {classes, currentTab, changeTab} = this.props;\n\treturn (\n\t    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n\t    <Tabs\n\t    value={currentTab}\n\t    onChange={changeTab}\n\t    variant=\"fullWidth\"\n\t    aria-label=\"tabs\"\n\t    >\n\t    <Tab classes={{ root: classes.fullHeight }} icon={<NotesIcon />} value=\"notes\" />\n\t    <Tab classes={{ root: classes.fullHeight }} icon={<ListIcon />} value=\"lists\" />\n\t    </Tabs>\n\t    </AppBar>\n\t);\n\n    }\n\n}\n\nclass NoteDialog extends React.Component {\n    render() {\n\tconst {\n\t    open,\n\t    handleChange,\n\t    handleNoteTagEdit,\n\t    handleClose,\n\t    handleSave,\n\t    handleArchive,\n\t    title,\n\t    tags,\n\t    description,\n\t} = this.props;\n\treturn (<Dialog\n        open={open}\n        onClose={handleClose}\n        scroll=\"paper\"\n        aria-labelledby=\"Note Dialog\"\n        aria-describedby=\"Existing Note\"\n      >\n            <DialogTitle>\n\t    <TextField\n            margin=\"dense\"\n            name=\"title\"\n            label=\"Title\"\n            type=\"text\"\n            fullWidth\n\t    value={title}\n\t    onChange={handleChange}\n            />\n\t    </DialogTitle>\n            <DialogContent dividers={true}>\n\t    <TextField\n            margin=\"dense\"\n            name=\"description\"\n            type=\"text\"\n\t    multiline\n\t    rows={8}\n\t    value={description}\n\t    onChange={handleChange}\n            fullWidth\n            />\n\t    <TagField onChange={handleNoteTagEdit} name={\"tags\"} tags={tags}/>\n\n        </DialogContent>\n            <DialogActions>\n\t    <Button onClick={handleArchive} color=\"primary\">\n\t    Archive\n            </Button>\n            <Button onClick={handleSave} color=\"primary\">\n\t    Save\n            </Button>\n            <Button onClick={handleClose} color=\"primary\">\n\t    Close\n            </Button>\n            </DialogActions>\n\t</Dialog>);\n    }\n}\n\nclass TagField extends React.Component {\n    render() {\n\tconst {name, onChange, tags} = this.props;\n\treturn(\n\t    <Autocomplete\n\t    multiple\n\t    name={name}\n\t    onChange={onChange}\n\t    value={tags}\n\t    options={TAGS}\n\t    getOptionLabel={(option) => option.title}\n\t    getOptionSelected={(option, value) => {\n\t\treturn check_tag_equality(option, value);\n\t    }}\n\t    renderInput={(params) =>\n\t\t<TextField\n\t\t{...params}\n\t\tlabel=\"Tags\"\n\t\tfullWidth\n\t\t/>}\n\t    />)\n    }\n}\n\nclass NoteEntry extends React.Component {\n    render() {\n\tconst {note_data, onClick} = this.props;\n\tconst last_update_human = new Date(Number(note_data.last_update_time) * 1000).toLocaleString();\n\treturn (<ListItem divider button onClick={onClick}>\n\t    <ListItemText primary={note_data.title} secondary={last_update_human} />\n\t    </ListItem>);\n    }\n}\n\nconst ListEntry = (list_data) =>\n    (<React.Fragment key={list_data.id}>\n\t<ListItem button>\n\t<ListItemText primary={list_data.title} secondary={list_data.description}/>\n\t</ListItem>\n\t</React.Fragment>);\n\nconst StyledBottomAppBar = withStyles(styles)(BottomAppBar);\nconst StyledNotesPanel = withStyles(styles)(NotesPanel);\nconst StyledListsPanel = withStyles(styles)(ListsPanel);\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}