{"version":3,"sources":["api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["NOTES_API","Tag","name","canHaveValue","this","title","value","console","error","tag_factory","TAGS","get_tags","a","archive_note","note_id","fetch","String","method","create_note","create_note_request","tags","map","convert_tags_to_rust","headers","body","JSON","stringify","update_note","update_note_request","check_tag_equality","tag1","tag2","toLowerCase","tag","convert_tags_from_rust","tag_name","Object","keys","tag_value","converted","setValue","notes_api","get_notes","owner","then","response","json","data","notes","values","push","sort","b","last_update_time","lists","styles","theme","fullHeight","mixins","toolbar","text","padding","spacing","addButton","position","zIndex","bottom","right","margin","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","appBar","top","grow","flexGrow","App","props","changeTab","event","setState","currentTab","state","bind","createMuiTheme","primary","light","main","dark","contrastText","secondary","default","Fragment","CssBaseline","ThemeProvider","StyledNotesPanel","StyledListsPanel","StyledBottomAppBar","React","Component","NotesPanel","handleOpen","active_note","open","active_uuid","uuid","description","handleCreate","origin","handleClose","handleTagListChange","stateName","oldState","evt","newValue","log","index","target","split","handleTagPickerChange","search","handleNoteTagEdit","handleNoteEdit","handleSave","handleArchive","loadNotes","catch","classes","Paper","square","className","handleChange","handlePickerChange","handleListEntryChange","inputPlaceholder","variant","List","filter","note_data","delete_time","length","search_tag","search_tag_found","note_tag","onClick","Fab","color","aria-label","IconButton","ListsPanel","Typography","gutterBottom","ListEntry","BottomAppBar","AppBar","Tabs","onChange","Tab","root","icon","NoteDialog","Dialog","onClose","scroll","aria-labelledby","aria-describedby","DialogTitle","TextField","label","type","fullWidth","DialogContent","dividers","multiline","rows","DialogActions","Button","TagInput","ref","InputProps","TagPicker","Autocomplete","multiple","options","getOptionLabel","option","renderTags","getOptionSelected","renderInput","params","placeholder","TagList","tag_data","tag_index","TagValue","NoteEntry","last_update_human","Date","Number","toLocaleString","ListItem","divider","button","ListItemText","list_data","id","withStyles","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"igBACMA,EAAY,wCAMZC,E,WACF,WAAYC,EAAMC,GAAe,oBACpCC,KAAKC,MAAQH,EACbE,KAAKD,aAAeA,EACpBC,KAAKE,MAAQ,K,qDAGDA,GACRF,KAAKD,aAGLC,KAAKE,MAAQA,EAFbC,QAAQC,MAAM,6D,KAObC,EAAc,SAACJ,GAAiC,IAA1BF,EAAyB,wDACjD,OAAO,IAAIF,EAAII,EAAOF,IAKpBO,EAAO,CAETD,EAAY,WACZA,EAAY,QACZA,EAAY,SACZA,EAAY,SACZA,EAAY,UACZA,EAAY,WACZA,EAAY,UACZA,EAAY,cACZA,EAAY,aACZA,EAAY,aACZA,EAAY,aAEZA,EAAY,UACZA,EAAY,iBACZA,EAAY,gBAEZA,EAAY,0BACZA,EAAY,qBACZA,EAAY,iBACZA,EAAY,iBAEZA,EAAY,iBAAiB,GAC7BA,EAAY,eAAe,GAC3BA,EAAY,UAAU,IAIpBE,EAAQ,uCAAG,sBAAAC,EAAA,+EACNF,GADM,2CAAH,qDAuBRG,EAAY,uCAAG,WAAMC,GAAN,SAAAF,EAAA,+EACVG,MAAMf,EAAY,iBAAmBgB,OAAOF,GAAU,CAChEG,OAAQ,SAFY,2CAAH,sDAMZC,EAAW,uCAAG,WAAOC,GAAP,SAAAP,EAAA,6DAChBO,EAAoBC,KAAOD,EAAoBC,KAAKC,IAAIC,IADxC,kBAETP,MAAMf,EAAY,QAAS,CACrCiB,OAAQ,OACRM,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAPF,2CAAH,sDAWXQ,EAAW,uCAAG,WAAOC,GAAP,SAAAhB,EAAA,6DAChBgB,EAAoBR,KAAOQ,EAAoBR,KAAKC,IAAIC,IADxC,kBAETP,MAAMf,EAAY,QAAU4B,EAAoBd,QAAS,CACnEG,OAAQ,MACRM,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUE,MAPF,2CAAH,sDAWXC,GAAqB,SAACC,EAAMC,GAC9B,OAAID,EAAK3B,cAAgB4B,EAAK5B,cAAgB2B,EAAKxB,OAASyB,EAAKzB,MAC7DwB,EAAKxB,MAAM0B,gBAAkBD,EAAKzB,MAAM0B,eAAiBF,EAAKzB,QAAU0B,EAAK1B,MAE7EyB,EAAKzB,QAAU0B,EAAK1B,OAItBiB,GAAuB,SAACW,GAC1B,OAAIA,EAAI9B,aACJ,eAAE8B,EAAI5B,MAAQ4B,EAAI3B,MAAM0B,eAExBC,EAAI5B,OAIN6B,GAAyB,SAACD,GAC5B,GAAoB,kBAATA,EACd,OAAOxB,EAAYwB,GACT,GAAoB,kBAATA,EAAkB,CAEvC,IAAME,EAAWC,OAAOC,KAAKJ,GAAK,GAC5BK,EAAYL,EAAIE,GAClBI,EAAY9B,EAAY0B,GAAU,GAEtC,OADAI,EAAUC,SAASF,GACZC,EAIP,OADAhC,QAAQC,MAAM,uBAAwByB,GAC/BA,GAIFQ,GAAY,CACd9B,SAAUA,EACVO,YAAaA,EACbS,YAAaA,EACbe,UApFc,SAACC,GACf,OAAO5B,MAAMf,EAAY,iBAAiB4C,MAAK,SAAAC,GAClD,OAAOA,EAASC,OAAOF,MAAK,SAAAG,GAExB,IADA,IAAIC,EAAQ,GACZ,MAAoBZ,OAAOa,OAAOF,EAAKC,OAAvC,eAA+C,CAA1C,IAAM1C,EAAK,KACnBA,EAAMc,KAAOd,EAAMc,KAAKC,IAAIa,IAC5Bc,EAAME,KAAK5C,GAQR,OANA0C,EAAMG,MAAK,SAACvC,EAAEwC,GACjB,OAAIxC,EAAEyC,iBAAoBD,EAAEC,iBACjB,GAEH,KAEEL,SAuERnC,aAAcA,GCzHZyC,GAAQ,GAERC,GAAS,SAAAC,GAAK,MAAK,CACvBC,WAAW,eACND,EAAME,OAAOC,SAEhBC,KAAM,CACNC,QAASL,EAAMM,QAAQ,EAAG,EAAG,IAE/BC,UAAW,CACTC,SAAU,WACVC,OAAQ,EACRC,OAAQ,MACRC,MAAO,KACPC,OAAQ,UAEVC,MAAO,CACLC,cAAe,IAEjBC,KAAM,CACJC,aAAchB,EAAMM,QAAQ,IAE9BW,UAAW,CACTC,gBAAiBlB,EAAMmB,QAAQC,WAAWP,OAE5CQ,OAAQ,CACNC,IAAK,OACLZ,OAAQ,GAEVa,KAAM,CACJC,SAAU,KAIRC,G,kDACF,WAAYC,GAAQ,IAAD,8BACtB,cAAMA,IAIHC,UAAY,SAACC,EAAO9E,GACvB,EAAK+E,SAAS,CAAEC,WAAYhF,KAJ5B,EAAKiF,MAAQ,CAACD,WAAY,SAC1B,EAAKH,UAAY,EAAKA,UAAUK,KAAf,gBAHK,E,qDAUtB,IAAMhC,EAAQiC,YAAe,CACxBd,QAAS,CACZe,QAAS,CACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAElBC,UAAW,CACPJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAElBlB,WAAY,CACRP,MAAO,UACP2B,QAAS,WAIf,OAAQ,eAAC,IAAMC,SAAP,WACJ,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAe3C,MAAOA,EAAtB,UAC2B,UAA1BpD,KAAKmF,MAAMD,YACX,cAACc,GAAD,IAE0B,UAA1BhG,KAAKmF,MAAMD,YACX,cAACe,GAAD,IAED,cAACC,GAAD,CAAoBnB,UAAW/E,KAAK+E,UAAWG,WAAYlF,KAAKmF,MAAMD,uB,GAxCzDiB,IAAMC,WA+ClBC,G,kDAEF,WAAYvB,GAAQ,IAAD,8BACtB,cAAMA,IAiCHwB,WAAa,SAACC,GACjB,EAAKtB,SACD,CACHuB,MAAM,EACNC,YAAaF,EAAYG,KACzBzG,MAAOsG,EAAYtG,MACnB0G,YAAaJ,EAAYI,YACzB3F,KAAMuF,EAAYvF,QAzCG,EAqDnB4F,aAAe,WAClB,EAAK3B,SACD,CACHuB,MAAM,EACNC,YAAa,KACbxG,MAAO,GACP0G,YAAa,GACbE,OAAQ,GACR7F,KAAM,MA7De,EA6GnB8F,YAAc,WACjB,EAAK7B,SAAS,CAACuB,MAAM,EAAOD,YAAa,QA9GnB,EAkHnBQ,oBAAsB,SAACC,GAAD,OAAe,SAACC,GAAD,OAAc,SAACC,EAAKC,GAC5DhH,QAAQiH,IAAI,MACZjH,QAAQiH,IAAIF,EAAKC,GAGjB,IAAME,EAAQH,EAAII,OAAOxH,KAAKyH,MAAM,KAAK,GACzCN,EAASI,GAAOnH,MAAQgH,EAAII,OAAOpH,MACnC,EAAK+E,SAAL,eAAgB+B,EAAYC,OAzHN,EA4HnBO,sBAAwB,SAACR,GAAD,OAAe,SAACE,EAAKC,GAChD,EAAKlC,SAAL,eAAgB+B,EAAYG,MA1H5B,EAAKhC,MAAQ,CACTqB,MAAM,EACNiB,OAAQ,GACRhB,YAAa,GACbxG,MAAO,GACP0G,YAAY,GACZpE,MAAO,UACPsE,OAAQ,GACR7F,KAAM,GACN4B,MAAO,IAGX,EAAK8E,kBAAoB,EAAKA,kBAAkBtC,KAAvB,gBACzB,EAAKuC,eAAiB,EAAKA,eAAevC,KAApB,gBACtB,EAAKkB,WAAa,EAAKA,WAAWlB,KAAhB,gBAClB,EAAKwC,WAAa,EAAKA,WAAWxC,KAAhB,gBAClB,EAAKyC,cAAgB,EAAKA,cAAczC,KAAnB,gBAnBC,E,gEAuBtBpF,KAAK8H,c,kCAGW,IAAD,OACfzF,GAAUC,UAAUtC,KAAKmF,MAAM5C,OAAOC,MAAK,SAAAI,GACvC,EAAKqC,SAAS,CACjBrC,MAAOA,OAELmF,MAAM5H,QAAQiH,O,sCAeG,IAAD,OACb1G,EAAUV,KAAKmF,MAAMsB,YAC3BpE,GAAU5B,aAAaC,GAAS8B,MAAK,SAAAC,GACjC,EAAKqF,eACNC,MAAM5H,QAAQC,S,qCAeC8G,GAClBlH,KAAKiF,SAAL,eACKiC,EAAII,OAAOxH,KAAOoH,EAAII,OAAOpH,U,wCAIb8E,EAAOmC,GAC5BnH,KAAKiF,SAAS,CACVjE,KAAMmG,M,mCAIO,IAAD,OAEhB,GAAGnH,KAAKmF,MAAMsB,YAAa,CACvB,IAAIjF,EAAsB,CAC7Bd,QAASV,KAAKmF,MAAMsB,YACpBxG,MAAOD,KAAKmF,MAAMlF,MAClB0G,YAAa3G,KAAKmF,MAAMwB,YACxBE,OAAQ7G,KAAKmF,MAAM0B,OACnB7F,KAAMhB,KAAKmF,MAAMnE,MAEdqB,GAAUd,YAAYC,GAAqBgB,MAAK,SAAAC,GAEnD,EAAKqF,eACCC,MAAM5H,QAAQC,WAEd,CACH,IAAIW,EAAsB,CAC7Bd,MAAOD,KAAKmF,MAAMlF,MAClB0G,YAAa3G,KAAKmF,MAAMwB,YACxBpE,MAAMvC,KAAKmF,MAAM5C,MACjBsE,OAAQ7G,KAAKmF,MAAM0B,OACnB7F,KAAMhB,KAAKmF,MAAMnE,MAEdqB,GAAUvB,YAAYC,GAAqByB,MAAK,SAAAC,GACnD,EAAKqF,YAEL,EAAKhB,iBACCiB,MAAM5H,QAAQC,U,+BAwBR,IAAD,OACJ4H,EAAYhI,KAAK8E,MAAjBkD,QACR,OACI,eAACC,EAAA,EAAD,CAAOC,QAAM,EAACC,UAAWH,EAAQ/D,MAAjC,UACCjE,KAAKmF,MAAMqB,MACX,cAAC,GAAD,CACJM,YAAa9G,KAAK8G,YAClBsB,aAAcpI,KAAK2H,eACnBD,kBAAmB1H,KAAK0H,kBACxBX,oBAAqB/G,KAAK+G,oBAC1Ba,WAAY5H,KAAK4H,WACjBC,cAAe7H,KAAK6H,cACpBrB,KAAMxG,KAAKmF,MAAMqB,KACjBvG,MAAOD,KAAKmF,MAAMlF,MAClB0G,YAAa3G,KAAKmF,MAAMwB,YACxBE,OAAQ7G,KAAKmF,MAAM0B,OACnB7F,KAAMhB,KAAKmF,MAAMnE,OAEd,cAAC,GAAD,CACAqH,mBAAoBrI,KAAKwH,sBAAsB,UAC/Cc,sBAAuBtI,KAAK+G,oBAAoB,UAChD7G,MAAOF,KAAKmF,MAAMsC,OAClBc,iBAAiB,qBACjBC,QAAQ,WAED,cAACC,EAAA,EAAD,CAAMN,UAAWH,EAAQ7D,KAAzB,SAEVnE,KAAKmF,MAAMvC,MAAM8F,QAAO,SAACC,GAErB,GAA6B,MAAzBA,EAAUC,YACjB,OAAO,EAIJ,GAAI,EAAKzD,MAAMsC,OAAOoB,OAAS,EAAG,qBAGZ,EAAK1D,MAAMsC,QAHC,IAGrC,2BAA4C,CAAC,IAAD,EAAjCqB,EAAiC,QACpCC,GAAmB,EADiB,cAElBJ,EAAU3H,MAFQ,IAExC,IAAI,EAAJ,qBAAsC,CAAC,IAA7BgI,EAA4B,QACtCvH,GAAmBqH,EAAYE,KAC9BD,GAAmB,IAJoB,8BAOxC,IAAKA,EACR,OAAO,GAX6B,+BAelC,OAAO,KACL9H,KAAI,SAAC0H,EAAWtB,GAAZ,OAEV,aADA,CACA,qBACA,cAAC,GAAD,CAAuCsB,UAAWA,EAAWM,QAAS,WAAO,EAAK3C,WAAWqC,KAA7F,qBAA8BtB,WAI3B,cAAC6B,EAAA,EAAD,CAAKC,MAAM,YAAYC,aAAW,MAAMjB,UAAWH,EAAQrE,UAA3D,SACA,cAAC0F,EAAA,EAAD,CAAYF,MAAM,UAAUF,QAASjJ,KAAK4G,aAA1C,SACO,cAAC,IAAD,e,GA7LaT,IAAMC,WAqMzBkD,G,uKACQ,IACLtB,EAAYhI,KAAK8E,MAAjBkD,QACR,OACI,eAACC,EAAA,EAAD,CAAOC,QAAM,EAACC,UAAWH,EAAQ/D,MAAjC,UACO,cAACsF,EAAA,EAAD,CAAYpB,UAAWH,EAAQxE,KAAMgF,QAAQ,KAAKgB,cAAY,EAA9D,mBAGA,cAACf,EAAA,EAAD,CAAMN,UAAWH,EAAQ7D,KAAzB,SACCjB,GAAMjC,IAAIwI,a,GATEtD,IAAMC,WAiBzBsD,G,uKACS,IAAD,EAC4B1J,KAAK8E,MAAvCkD,EADM,EACNA,QAAS9C,EADH,EACGA,WAAYH,EADf,EACeA,UAC5B,OACI,cAAC4E,EAAA,EAAD,CAAQ/F,SAAS,QAAQuF,MAAM,UAAUhB,UAAWH,EAAQvD,OAA5D,SACA,eAACmF,EAAA,EAAD,CACA1J,MAAOgF,EACP2E,SAAU9E,EACVyD,QAAQ,YACRY,aAAW,OAJX,UAMA,cAACU,EAAA,EAAD,CAAK9B,QAAS,CAAE+B,KAAM/B,EAAQ3E,YAAc2G,KAAM,cAAC,IAAD,IAAe9J,MAAM,UACvE,cAAC4J,EAAA,EAAD,CAAK9B,QAAS,CAAE+B,KAAM/B,EAAQ3E,YAAc2G,KAAM,cAAC,IAAD,IAAc9J,MAAM,mB,GAZhDiG,IAAMC,WAqB3B6D,G,uKACQ,IAAD,EAYRjK,KAAK8E,MAVL0B,EAFQ,EAERA,KACA4B,EAHQ,EAGRA,aACAV,EAJQ,EAIRA,kBACAX,EALQ,EAKRA,oBACAD,EANQ,EAMRA,YACAc,EAPQ,EAORA,WACAC,EARQ,EAQRA,cACA5H,EATQ,EASRA,MACAe,EAVQ,EAURA,KACA2F,EAXQ,EAWRA,YAEJ,OAAQ,eAACuD,EAAA,EAAD,CACD1D,KAAMA,EACN2D,QAASrD,EACTsD,OAAO,QACPC,kBAAgB,cAChBC,mBAAiB,gBALhB,UAOG,cAACC,EAAA,EAAD,UACP,cAACC,EAAA,EAAD,CACOxG,OAAO,QACPlE,KAAK,QACL2K,MAAM,QACNC,KAAK,OACLC,WAAS,EAChBzK,MAAOD,EACP4J,SAAUzB,MAGH,eAACwC,EAAA,EAAD,CAAeC,UAAU,EAAzB,UACP,cAACL,EAAA,EAAD,CACOxG,OAAO,QACPlE,KAAK,cACL4K,KAAK,OACZI,WAAS,EACTC,KAAM,EACN7K,MAAOyG,EACPkD,SAAUzB,EACHuC,WAAS,IAEhB,cAAC,GAAD,CACAtC,mBAAoBX,EACpBY,sBAAuBvB,EAAoB,QAC3C7G,MAAOc,EACPwH,QAAQ,WACRD,iBAAiB,qBAIV,eAACyC,EAAA,EAAD,WACP,cAACC,EAAA,EAAD,CAAQhC,QAASpB,EAAesB,MAAM,UAAtC,qBAGO,cAAC8B,EAAA,EAAD,CAAQhC,QAASrB,EAAYuB,MAAM,UAAnC,kBAGA,cAAC8B,EAAA,EAAD,CAAQhC,QAASnC,EAAaqC,MAAM,UAApC,6B,GA3DahD,IAAMC,WAmEzB8E,G,uKAEL,OACI,qBAAKC,IAAKnL,KAAK8E,MAAMsG,WAAWD,IAAhC,SACA,cAACX,EAAA,EAAD,2BACIxK,KAAK8E,OADT,IAEA6F,WAAS,W,GANSxE,IAAMC,WAavBiF,G,uKACQ,IAAD,EAC0ErL,KAAK8E,MAApF5E,EADK,EACLA,MAAOmI,EADF,EACEA,mBAAoBC,EADtB,EACsBA,sBAAuBC,EAD7C,EAC6CA,iBAAkBC,EAD/D,EAC+DA,QAC3E,OAAQ,qCACJ,cAAC8C,EAAA,EAAD,CACAC,UAAQ,EACRC,QAASlL,EACTmL,eAAgB,SAACC,GAAD,OAAYA,EAAOzL,OACnCC,MAAOA,EACP2J,SAAUxB,EAEVsD,WAAY,aACZC,kBAAmB,SAACF,EAAQxL,GAC/B,OAAOuB,GAAmBiK,EAAQxL,IAE/B2L,YAAa,SAACC,GAAD,OAChB,cAAC,GAAD,2BACIA,GADJ,IAEAtD,QAASA,EACTuD,YAAaxD,QAGd,cAAC,GAAD,CAASrI,MAAOA,EAAO2J,SAAUvB,W,GAtBVnC,IAAMC,WAgCxB4F,G,uKAEL,IAAMhL,EAAOhB,KAAK8E,MAAM5E,MAClBkI,EAAepI,KAAK8E,MAAM+E,SAAS7I,GACzC,OACI,6BACCA,EAAKC,KAAI,SAACgL,EAAU5E,GACxB,OAAO,cAAC,GAAD,aAAU6E,UAAW7E,EAAOwC,SAAUzB,GAAkB6D,a,GAP3C9F,IAAMC,WAetB+F,G,uKAEL,OACI,sCACEnM,KAAK8E,MAAM/E,cAAgB,cAACwJ,EAAA,EAAD,UAAavJ,KAAK8E,MAAM7E,QACpDD,KAAK8E,MAAM/E,cACX,cAACyK,EAAA,EAAD,CAAWtK,MAAOF,KAAK8E,MAAM5E,OAAS,GAC1C2J,SAAU7J,KAAK8E,MAAM+E,SACrBa,KAAK,OACL5K,KAAME,KAAK8E,MAAMoH,UAAY,IAAMlM,KAAK8E,MAAM7E,MAAQ,SACtDwK,MAAOzK,KAAK8E,MAAM7E,e,GAVGkG,IAAMC,WAkBvBgG,G,uKACQ,IAAD,EACiBpM,KAAK8E,MAA3B6D,EADK,EACLA,UAAWM,EADN,EACMA,QACZoD,EAAoB,IAAIC,KAA0C,IAArCC,OAAO5D,EAAU1F,mBAA0BuJ,iBAC9E,OAAQ,cAACC,EAAA,EAAD,CAAUC,SAAO,EAACC,QAAM,EAAC1D,QAASA,EAAlC,SACJ,cAAC2D,EAAA,EAAD,CAActH,QAASqD,EAAU1I,MAAO0F,UAAW0G,U,GALhClG,IAAMC,WAUxBqD,GAAY,SAACoD,GAAD,OACb,cAAC,IAAMhH,SAAP,UACJ,cAAC4G,EAAA,EAAD,CAAUE,QAAM,EAAhB,SACA,cAACC,EAAA,EAAD,CAActH,QAASuH,EAAU5M,MAAO0F,UAAWkH,EAAUlG,iBAFpCkG,EAAUC,KAM9B5G,GAAqB6G,YAAW5J,GAAX4J,CAAmBrD,IACxC1D,GAAmB+G,YAAW5J,GAAX4J,CAAmB1G,IACtCJ,GAAmB8G,YAAW5J,GAAX4J,CAAmBzD,IAE7ByD,eAAW5J,GAAX4J,CAAmBlI,IChf5BmI,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT/K,MAAK,SAACoL,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3I,QACfsI,UAAUC,cAAcO,YAI1B9N,QAAQiH,IACN,+GAKEoG,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBzN,QAAQiH,IAAI,sCAGRoG,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B7F,OAAM,SAAC3H,GACND,QAAQC,MAAM,4CAA6CA,MC9FjE,IAYegO,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB9L,MAAK,YAAkD,IAA/C+L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SFSnB,SAAkBxB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIwB,IAAIC,aAAwBhC,OAAOC,SAASgC,MACpDtI,SAAWqG,OAAOC,SAAStG,OAIvC,OAGFqG,OAAOkC,iBAAiB,QAAQ,WAC9B,IAAM7B,EAAK,UAAM2B,aAAN,sBAEPlC,KAgEV,SAAiCO,EAAOC,GAEtC7M,MAAM4M,EAAO,CACXpM,QAAS,CAAE,iBAAkB,YAE5BqB,MAAK,SAACC,GAEL,IAAM4M,EAAc5M,EAAStB,QAAQmO,IAAI,gBAEnB,MAApB7M,EAAS8M,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAMjN,MAAK,SAACoL,GAClCA,EAAa8B,aAAalN,MAAK,WAC7B0K,OAAOC,SAASwC,eAKpBrC,GAAgBC,EAAOC,MAG1BzF,OAAM,WACL5H,QAAQiH,IAAI,oEAtFVwI,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAMjN,MAAK,WACjCrC,QAAQiH,IACN,+GAMJkG,GAAgBC,EAAOC,OE/B/BqC,GAKAzB,O","file":"static/js/main.a46ac812.chunk.js","sourcesContent":["// Run against prod API\nconst NOTES_API = \"https://typed-thoughts.herokuapp.com/\"\n// Local Development\n// const NOTES_API = 'http://localhost:9001/'\n\n// TODO -> Get valid tags from Rust so that we can't submit invalid tags,\n// or maybe just share the representation? \nclass Tag {\n    constructor(name, canHaveValue) {\n\tthis.title = name;\n\tthis.canHaveValue = canHaveValue;\n\tthis.value = null;\n    }\n\n    setValue(value) {\n\tif(!this.canHaveValue) {\n\t    console.error(\"Attempting to set value for tag that can't have value\");\n\t} else {\n\t    this.value = value;\n\t}\n    }\n}\n\nconst tag_factory = (title, canHaveValue = false) => {\n    return new Tag(title, canHaveValue);\n}\n\n\n// Keep in sync with rust types.rs plz\nconst TAGS = [\n    // Medium based tags\n    tag_factory(\"Article\"),\n    tag_factory(\"Book\"),\n    tag_factory(\"Movie\"),\n    tag_factory(\"Music\"),\n    tag_factory(\"Series\"),\n    tag_factory(\"Podcast\"),\n    tag_factory(\"Recipe\"),\n    tag_factory(\"Restaurant\"),\n    tag_factory(\"Adventure\"),\n    tag_factory(\"VideoGame\"),\n    tag_factory(\"BoardGame\"),\n    // Genre Based tags\n    tag_factory(\"Career\"),\n    tag_factory(\"Entertainment\"),\n    tag_factory(\"Productivity\"),\n    // Topic based tags\n    tag_factory(\"ArtificialIntelligence\"),\n    tag_factory(\"EffectiveAltruism\"),\n    tag_factory(\"SocialJustice\"),\n    tag_factory(\"Environmental\"),\n    // Meta based tags\n    tag_factory(\"RecommendedBy\", true),\n    tag_factory(\"RemindsMeOf\", true),\n    tag_factory(\"Origin\", true),\n\n];\n\nconst get_tags = async () => {\n    return TAGS;\n}\n\nconst get_notes = (owner) => {\n    return fetch(NOTES_API + \"notes/brendon\").then(response => {\n\treturn response.json().then(data => {\n\t    let notes = [];\n\t    for (const value of Object.values(data.notes)) {\n\t\tvalue.tags = value.tags.map(convert_tags_from_rust);\n\t\tnotes.push(value);\n\t    }\n\t    notes.sort((a,b) => {\n\t\tif (a.last_update_time <  b.last_update_time) {\n\t\t    return 1;\n\t\t}\n\t\treturn -1;\n\t    });\n\t    return notes\n\t})\n    });\n}\n\nconst archive_note = async(note_id) => {\n    return fetch(NOTES_API + \"notes/archive/\" + String(note_id), {\n\tmethod: \"PUT\",\n    });\n}\n\nconst create_note = async (create_note_request) => {\n    create_note_request.tags = create_note_request.tags.map(convert_tags_to_rust);\n    return fetch(NOTES_API + \"notes\", {\n\tmethod: \"POST\",\n\theaders: {\n\t    'Content-Type': 'application/json'\n\t},\n\tbody: JSON.stringify(create_note_request)\n    });\n}\n\nconst update_note = async (update_note_request) => {\n    update_note_request.tags = update_note_request.tags.map(convert_tags_to_rust);\n    return fetch(NOTES_API + \"note/\" + update_note_request.note_id, {\n\tmethod: \"PUT\",\n\theaders: {\n\t    'Content-Type': 'application/json'\n\t},\n\tbody: JSON.stringify(update_note_request)\n    });\n}\n\nconst check_tag_equality = (tag1, tag2) => {\n    if (tag1.canHaveValue && tag2.canHaveValue && tag1.value && tag2.value) {\n\treturn tag1.value.toLowerCase() === tag2.value.toLowerCase() && tag1.title === tag2.title\n    } else {\n\treturn tag1.title === tag2.title;\n    }\n}\n\nconst convert_tags_to_rust = (tag) => {\n    if (tag.canHaveValue) {\n\treturn {[tag.title]: tag.value.toLowerCase()}\n    } else {\n\treturn tag.title;\n    }\n}\n\nconst convert_tags_from_rust = (tag) => {\n    if (typeof(tag) === \"string\") {\n\treturn tag_factory(tag);\n    } else if (typeof(tag) === \"object\"){\n\t// TODO: validate tag name and form cuz this is jank\n\tconst tag_name = Object.keys(tag)[0];\n\tconst tag_value = tag[tag_name];\n\tlet converted = tag_factory(tag_name, true);\n\tconverted.setValue(tag_value);\n\treturn converted;\n    }\n    else {\n\tconsole.error(\"Unknown tag variant:\", tag);\n\treturn tag;\n    }\n}\n\nconst notes_api = {\n    get_tags: get_tags,\n    create_note: create_note,\n    update_note: update_note,\n    get_notes: get_notes,\n    archive_note: archive_note,\n}\n\nexport {\n    TAGS, check_tag_equality, notes_api\n};\n\n\n\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Fab from \"@material-ui/core/Fab\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListIcon from '@material-ui/icons/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nimport {notes_api, TAGS, check_tag_equality} from \"./api\";\n\nconst lists = [];\n\nconst styles = theme => ({\n  fullHeight: {\n    ...theme.mixins.toolbar,\n  },\n    text: {\n    padding: theme.spacing(2, 2, 0),\n    },\n  addButton: {\n    position: 'absolute',\n    zIndex: 1,\n    bottom: '10%',\n    right: \"5%\",\n    margin: '0 auto',\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nclass App extends React.Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state = {currentTab: 'notes'};\n\tthis.changeTab = this.changeTab.bind(this);\n    }\n    changeTab = (event, value) => {\n\tthis.setState({ currentTab: value});\n    };\n\n    render () {\n\tconst theme = createMuiTheme({\n\t     palette: {\n\t\t primary: {\n\t\t     light: '#757ce8',\n\t\t     main: '#000000',\n\t\t     dark: '#002884',\n\t\t     contrastText: '#fff',\n\t\t },\n\t\t secondary: {\n\t\t     light: '#ff7961',\n\t\t     main: '#f44336',\n\t\t     dark: '#ba000d',\n\t\t     contrastText: '#000',\n\t\t },\n\t\t background: {\n\t\t     paper: '#efefef',\n\t\t     default: \"#fff\",\n\t\t }\n\t     },\n\t});\n\treturn (<React.Fragment>\n\t    <CssBaseline />\n\t    <ThemeProvider theme={theme}>\n\t    {this.state.currentTab === 'notes' &&\n\t     <StyledNotesPanel />\n\t    }\n\t    {this.state.currentTab === 'lists' &&\n\t     <StyledListsPanel />\n\t    }\n\t    <StyledBottomAppBar changeTab={this.changeTab} currentTab={this.state.currentTab}/>\n\t    </ThemeProvider>\n\t</React.Fragment>);\n    }\n}\n\n\nclass NotesPanel extends React.Component {\n    // Note we are looking at, and whether we are looking at it\n    constructor(props) {\n\tsuper(props);\n\t// Chose to unpack note to simplify set_state\n\tthis.state = {\n\t    open: false,\n\t    search: [],\n\t    active_uuid: \"\",\n\t    title: \"\",\n\t    description:\"\",\n\t    owner: \"brendon\",\n\t    origin: \"\",\n\t    tags: [],\n\t    notes: []\n\t    \n\t}\n\tthis.handleNoteTagEdit = this.handleNoteTagEdit.bind(this);\n\tthis.handleNoteEdit = this.handleNoteEdit.bind(this);\n\tthis.handleOpen = this.handleOpen.bind(this);\n\tthis.handleSave = this.handleSave.bind(this);\n\tthis.handleArchive = this.handleArchive.bind(this);\n    }\n\n    componentDidMount() {\n\tthis.loadNotes();\n    }\n\n    loadNotes() {\n\tnotes_api.get_notes(this.state.owner).then(notes => {\n\t    this.setState({\n\t\tnotes: notes\n\t    });\n\t}).catch(console.log)\n    }\n\n    handleOpen = (active_note) => {\n\tthis.setState(\n\t    {\n\t\topen: true,\n\t\tactive_uuid: active_note.uuid,\n\t\ttitle: active_note.title,\n\t\tdescription: active_note.description,\n\t\ttags: active_note.tags,\n\n\t});\n    }\n\n    handleArchive() {\n\tconst note_id = this.state.active_uuid;\n\tnotes_api.archive_note(note_id).then(response => {\n\t    this.loadNotes();\n\t}).catch(console.error);\n    }\n\n    handleCreate = () => {\n\tthis.setState(\n\t    {\n\t\topen: true,\n\t\tactive_uuid: null,\n\t\ttitle: \"\",\n\t\tdescription: \"\",\n\t\torigin: \"\",\n\t\ttags: []\n\t});\n    }\n\n    handleNoteEdit(evt) {\n\tthis.setState({\n\t    [evt.target.name]: evt.target.value\n\t});\n    }\n\n    handleNoteTagEdit(event, newValue) {\n\tthis.setState({\n\t    tags: newValue\n\t});\n    }\n\n    handleSave() {\n\t// If we are editing a note\n\tif(this.state.active_uuid) {\n\t    let update_note_request = {\n\t\tnote_id: this.state.active_uuid,\n\t\ttitle: this.state.title,\n\t\tdescription: this.state.description,\n\t\torigin: this.state.origin,\n\t\ttags: this.state.tags,\n\t    };\n\t    notes_api.update_note(update_note_request).then(response => {\n\t\t// Once we've successfully saved, log the response, and reload the notes on the page\n\t\tthis.loadNotes();\n\t    }).catch(console.error);\n\t    \n\t} else {\n\t    let create_note_request = {\n\t\ttitle: this.state.title,\n\t\tdescription: this.state.description,\n\t\towner:this.state.owner,\n\t\torigin: this.state.origin,\n\t\ttags: this.state.tags,\n\t    };\n\t    notes_api.create_note(create_note_request).then(response => {\n\t\tthis.loadNotes();\n\t\t// Force close after create\n\t\tthis.handleClose();\n\t    }).catch(console.error);\n\t}\n    }\n\n\n    handleClose = () => {\n\tthis.setState({open: false, active_note: null});\n    }\n\n    // Watch for race conditions...\n    handleTagListChange = (stateName) => (oldState) => (evt, newValue) => {\n\tconsole.log(\"tl\");\n\tconsole.log(evt, newValue);\n\t// Hello? yes, this is jank please find a new way to do this lol\n\t// or at least localize it to a component?\n\tconst index = evt.target.name.split(\"-\")[0]\n\toldState[index].value = evt.target.value;\n\tthis.setState({[stateName]: oldState})\n    }\n\n    handleTagPickerChange = (stateName) => (evt, newValue) => {\n\tthis.setState({[stateName]: newValue})\n    }\n\n    render() {\n\tconst { classes } = this.props;\n\treturn (\n\t    <Paper square className={classes.paper}>\n\t    {this.state.open &&\n\t     <NoteDialog\n\t\thandleClose={this.handleClose}\n\t\thandleChange={this.handleNoteEdit}\n\t\thandleNoteTagEdit={this.handleNoteTagEdit}\n\t\thandleTagListChange={this.handleTagListChange}\n\t\thandleSave={this.handleSave}\n\t\thandleArchive={this.handleArchive}\n\t\topen={this.state.open}\n\t\ttitle={this.state.title}\n\t\tdescription={this.state.description}\n\t\torigin={this.state.origin}\n\t\ttags={this.state.tags}\n\t\t/>}\n\t    <TagPicker\n\t    handlePickerChange={this.handleTagPickerChange(\"search\")}\n\t    handleListEntryChange={this.handleTagListChange(\"search\")}\n\t    value={this.state.search}\n\t    inputPlaceholder=\"Search for tags...\"\n\t    variant=\"filled\"\n\t    />\n            <List className={classes.list}>\n            {\n\t\tthis.state.notes.filter((note_data) => {\n\t\t    // Don't show notes that have been 'archived'\n\t\t    if (note_data.delete_time != null) {\n\t\t\treturn false;\n\t\t    }\n\t\t    \n\t\t    // Filter notes based on search box\n\t\t    if (this.state.search.length > 0) {\n\t\t\t// TODO make this a set :(\n\t\t\t// Note tags must contain all search tags\n\t\t\tfor (const search_tag of this.state.search) {\n\t\t\t    let search_tag_found = false;\n\t\t\t    for(const note_tag of note_data.tags) {\n\t\t\t\tif(check_tag_equality(search_tag, note_tag)) {\n\t\t\t\t    search_tag_found = true;\n\t\t\t\t}\n\t\t\t    }\n\t\t\t    if (!search_tag_found) {\n\t\t\t\treturn false;\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t    return true;\n\t    }).map((note_data, index) => (\n\t\t// map notes into viewable entries\n\t\t<>\n\t\t<NoteEntry key={`note-entry-${index}`} note_data={note_data} onClick={() => {this.handleOpen(note_data)}} />\n\t\t</>)\n\t    )}\n            </List>\n\t    <Fab color=\"secondary\" aria-label=\"add\" className={classes.addButton}>\n\t    <IconButton color=\"inherit\" onClick={this.handleCreate}>\n            <AddIcon />\n\t    </IconButton>\n            </Fab>\n\t    </Paper>\n\t);\n    }\n}\n\nclass ListsPanel extends React.Component {\n    render() {\n\tconst { classes } = this.props;\n\treturn (\n\t    <Paper square className={classes.paper}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom>\n\t    Lists\n            </Typography>\n            <List className={classes.list}>\n            {lists.map(ListEntry)}\n            </List>\n\t    </Paper>\n\t);\n    }\n}\n\n\nclass BottomAppBar extends React.Component {\n    render () {\n\tconst {classes, currentTab, changeTab} = this.props;\n\treturn (\n\t    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n\t    <Tabs\n\t    value={currentTab}\n\t    onChange={changeTab}\n\t    variant=\"fullWidth\"\n\t    aria-label=\"tabs\"\n\t    >\n\t    <Tab classes={{ root: classes.fullHeight }} icon={<NotesIcon />} value=\"notes\" />\n\t    <Tab classes={{ root: classes.fullHeight }} icon={<ListIcon />} value=\"lists\" />\n\t    </Tabs>\n\t    </AppBar>\n\t);\n\n    }\n\n}\n\nclass NoteDialog extends React.Component {\n    render() {\n\tconst {\n\t    open,\n\t    handleChange,\n\t    handleNoteTagEdit,\n\t    handleTagListChange,\n\t    handleClose,\n\t    handleSave,\n\t    handleArchive,\n\t    title,\n\t    tags,\n\t    description,\n\t} = this.props;\n\treturn (<Dialog\n        open={open}\n        onClose={handleClose}\n        scroll=\"paper\"\n        aria-labelledby=\"Note Dialog\"\n        aria-describedby=\"Existing Note\"\n      >\n            <DialogTitle>\n\t    <TextField\n            margin=\"dense\"\n            name=\"title\"\n            label=\"Title\"\n            type=\"text\"\n            fullWidth\n\t    value={title}\n\t    onChange={handleChange}\n            />\n\t    </DialogTitle>\n            <DialogContent dividers={true}>\n\t    <TextField\n            margin=\"dense\"\n            name=\"description\"\n            type=\"text\"\n\t    multiline\n\t    rows={8}\n\t    value={description}\n\t    onChange={handleChange}\n            fullWidth\n            />\n\t    <TagPicker\n\t    handlePickerChange={handleNoteTagEdit}\n\t    handleListEntryChange={handleTagListChange(\"tags\")}\n\t    value={tags}\n\t    variant=\"standard\"\n\t    inputPlaceholder=\"Enter tags...\"\n\t    />\n\n        </DialogContent>\n            <DialogActions>\n\t    <Button onClick={handleArchive} color=\"primary\">\n\t    Archive\n            </Button>\n            <Button onClick={handleSave} color=\"primary\">\n\t    Save\n            </Button>\n            <Button onClick={handleClose} color=\"primary\">\n\t    Close\n            </Button>\n            </DialogActions>\n\t</Dialog>);\n    }\n}\n\nclass TagInput extends React.Component {\n    render() {\n\treturn (\n\t    <div ref={this.props.InputProps.ref}>\n\t    <TextField\n\t    {...this.props}\n\t    fullWidth\n\t    />\n\t    </div>\n\t)\n    }\n}\n\nclass TagPicker extends React.Component {\n    render() {\n\tconst {value, handlePickerChange, handleListEntryChange, inputPlaceholder, variant} = this.props;\n\treturn (<>\n    \t<Autocomplete\n\t    multiple\n\t    options={TAGS}\n\t    getOptionLabel={(option) => option.title}\n\t    value={value}\n\t    onChange={handlePickerChange}\n\t    // Don't render the tags in the list, as we render them outside in TagList\n\t    renderTags={() => {}}\n\t    getOptionSelected={(option, value) => {\n\t\treturn check_tag_equality(option, value);\n\t    }}\n\t    renderInput={(params) =>\n\t\t<TagInput\n\t\t{...params}\n\t\tvariant={variant}\n\t\tplaceholder={inputPlaceholder}\n\t\t/>}\n\t    />\n\t<TagList value={value} onChange={handleListEntryChange} />\n\t</>)\n    }\n}\n\n// Tag Entry\n// Autocomplete component for figuring out which Tag you'd like to select\n// once you've selected a tag, that's added to the list of tag's you're using.\n// You then can fill out a tag with the values that you'd like\n// The search component then looks at these tags and filters (if no value in assumes has tag by value ambiguous?\nclass TagList extends React.Component {\n    render() {\n\tconst tags = this.props.value;\n\tconst handleChange = this.props.onChange(tags);\n\treturn (\n\t    <ul>\n\t    {tags.map((tag_data, index) => {\n\t\treturn <TagValue tag_index={index} onChange={handleChange} {...tag_data} />\n\t    })}\n\t    </ul>\n\t)\n    }\n}\n\n\nclass TagValue extends React.Component {\n    render() {\n\treturn (\n\t    <>\n\t    {!this.props.canHaveValue && <Typography>{this.props.title}</Typography>}\n\t    {this.props.canHaveValue&&\n\t     <TextField value={this.props.value || \"\"}\n\t\tonChange={this.props.onChange}\n\t\ttype=\"text\"\n\t\tname={this.props.tag_index + \"-\" + this.props.title + \"-value\"}\n\t\tlabel={this.props.title}\n\t\t/>}\n\t    </>\n\t)\n    }\n}\n\n    \nclass NoteEntry extends React.Component {\n    render() {\n\tconst {note_data, onClick} = this.props;\n\tconst last_update_human = new Date(Number(note_data.last_update_time) * 1000).toLocaleString();\n\treturn (<ListItem divider button onClick={onClick}>\n\t    <ListItemText primary={note_data.title} secondary={last_update_human} />\n\t    </ListItem>);\n    }\n}\n\nconst ListEntry = (list_data) =>\n    (<React.Fragment key={list_data.id}>\n\t<ListItem button>\n\t<ListItemText primary={list_data.title} secondary={list_data.description}/>\n\t</ListItem>\n\t</React.Fragment>);\n\nconst StyledBottomAppBar = withStyles(styles)(BottomAppBar);\nconst StyledNotesPanel = withStyles(styles)(NotesPanel);\nconst StyledListsPanel = withStyles(styles)(ListsPanel);\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}